!function(){const t=document.querySelector(".todo"),e=t.querySelector(".date-title"),s=t.querySelector(".status-title"),n=t.querySelector(".add-btn"),o=t.querySelector(".clear-done-tasks"),r=t.querySelector(".tasks-container"),a=t.querySelector(".list-tasks-incompleted"),i=t.querySelector(".list-tasks-completed");t.querySelector(".task-title, .task-сategory");let l=[];function c(){const t=document.querySelectorAll(".list-tasks-completed .task"),e=document.querySelectorAll(".list-tasks-incompleted .task");s.textContent=`${e.length} incomplete, ${t.length} completed`}function d(t){const e=`<div id="${t.id}" class="task flex items-start mt-4">\n\t\t\t<div class="task-checkbox w-6 h-6 border-2 flex items-center justify-center border-gray-200 rounded-md cursor-pointer mt-0.5">\n\t\t\t\t<svg class="opacity-0 pointer-events-none" width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">\n\t\t\t\t\t<path d="M1 6L3.91667 9L9 1" stroke="#575767" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<div class="task-deskription w-full flex flex-col ml-4">\n\t\t\t\t<input value="${t.title}" placeholder="Task" data-deskription="title" class="task-title bg-transparent focus-visible:outline-none text-[#575767] text-lg font-medium">\n\t\t\t\t</input>\n\t\t\t\t<input value="${t.category}" placeholder="Category" data-deskription="category" class="task-сategory bg-transparent focus-visible:outline-none text-[#B9B9BE] font-semibold mt-1">\n\t\t\t\t</input>\n\t\t\t</div>\n\t\t</div>`;""===t.status?a.insertAdjacentHTML("afterbegin",e):i.insertAdjacentHTML("afterbegin",e);const s=r.querySelector(`[id="${t.id}"]`);s.querySelectorAll("input[data-deskription]").forEach((t=>{t.addEventListener("input",k)})),"done"===t.status&&u(s)}function u(t){const e=t.querySelector(".task-deskription");t.querySelector(".task-checkbox svg").classList.toggle("opacity-0"),e.classList.toggle("opacity-50","pointer-events-none")}function k(){const t=this.closest(".task").id,e=l.findIndex((e=>e.id===Number(t))),s=this.dataset.deskription;l[e][s]=this.value,g()}function g(){localStorage.setItem("tasks",JSON.stringify(l))}localStorage.getItem("tasks")&&(l=JSON.parse(localStorage.getItem("tasks")),l.forEach((t=>{d(t),"done"===t.status&&r.querySelector(`[id="${t.id}"]`)}))),function(){const t=new Date;e.textContent=`${["January","February","March","April","May","June","July","August","September","October","November","December"][t.getMonth()]} ${t.getDate()}, ${t.getFullYear()}`}(),c(),n.addEventListener("click",(()=>{const t={id:Date.now(),title:"",category:"",status:""};d(t),l.push(t),a.querySelector(".task-title").focus(),c(),g()})),o.addEventListener("click",(()=>{i.querySelectorAll(".task").forEach((t=>{t.remove()})),l=l.filter((t=>"done"!==t.status)),c(),g()})),r.addEventListener("click",(t=>{t.target.classList.contains("task-checkbox")&&function(t){const e=t,s=Number(e.id),n=l.findIndex((t=>t.id===Number(s)));u(e),l[n].status="done"===l[n].status?"":"done","done"===l[n].status?i.insertAdjacentElement("afterbegin",e):a.insertAdjacentElement("afterbegin",e),c(),g()}(t.target.closest(".task"))}))}();